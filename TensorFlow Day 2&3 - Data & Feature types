#data manipulations of the Titanic data set

from __future__ import absolute_import, division, print_function, unicode_literals
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from IPython.display import clear_output
from six.moves import urllib

import tensorflow.compat.v2.feature_column as fc

import tensorflow as tf

#read in data
dftrain = pd.read_csv('https://storage.googleapis.com/tf-datasets/titanic/train.csv')
dfeval = pd.read_csv('https://storage.googleapis.com/tf-datasets/titanic/eval.csv')

#show first 5 entries of data
#print(dftrain.head())

#remove survived column from data
y_train = dftrain.pop('survived')
y_eval = dfeval.pop('survived')


#separate out features which are categorical or numerical
categorical_columns = ['sex', 'n_siblings_spouses', 'parch', 'class', 'deck', 'embark_town', 'alone']

numeric_columns = ['age', 'fare']


#prepare list of coded categorical or numerical features
feature_columns =[]
for feature_name in categorical_columns:
    vocabulary = dftrain[feature_name].unique()
    feature_columns.append(tf.feature_column.categorical_column_with_vocabulary_list(feature_name, vocabulary))
        
for feature_name in numeric_columns:
    feature_columns.append(tf.feature_column.numeric_column(feature_name, dtype=tf.float32))
    
print(feature_columns)

#print(y_train)

#show row 0 of data
#print(dftrain.loc[0], y_train.loc[0])

#basic data stats
#dftrain.describe()

#rows and column numbers
#dftrain.shape
